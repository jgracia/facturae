# Generated by Django 2.2.8 on 2019-12-26 04:00

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('almacen', '0005_controlproductolote_controlproductoserie_historicalcontrolproductolote_historicalcontrolproductoseri'),
    ]

    operations = [
        migrations.RunSQL("DROP VIEW IF EXISTS almacen_inventarioinicial;"),
        migrations.RunSQL("""
            CREATE OR REPLACE VIEW almacen_inventarioinicial AS
            SELECT row_number() OVER () as id,
                ak.producto_id,
                SUM(ak.cantidad) AS cantidad,
                ak.unidad_id,
                prod.unidad_equivalencia as equiv_undprim,
                ak.almacen_id,
                ak.empresa_id
            FROM almacen_kardex ak
            INNER JOIN producto_producto prod on ak.producto_id = prod.producto_id
            INNER JOIN almacen_tipomovimiento mov on ak.movimiento_id = mov.tipo_movimiento_id
            WHERE mov.codigo = 'INV_INI'
            GROUP BY ak.producto_id, ak.unidad_id, ak.almacen_id, ak.empresa_id, equiv_undprim;
        """),
        migrations.RunSQL("DROP VIEW IF EXISTS almacen_movimientoentrada;"),
        migrations.RunSQL("""
            CREATE OR REPLACE VIEW almacen_movimientoentrada AS
            SELECT row_number() OVER () as id,
                ak.producto_id,
                SUM(ak.cantidad) AS cantidad,
                ak.unidad_id,
                prod.unidad_equivalencia as equiv_undprim,
                ak.almacen_id,
                ak.empresa_id
            FROM almacen_kardex ak
            INNER JOIN producto_producto prod on ak.producto_id = prod.producto_id
            INNER JOIN almacen_tipomovimiento mov on ak.movimiento_id = mov.tipo_movimiento_id
            WHERE mov.codigo IN ('INV_INI', 'ENT_FAC', 'ENT_OBSQ', 'ENT_TRANS', 'ENT_AJSOB')
            GROUP BY ak.producto_id, ak.unidad_id, ak.almacen_id, ak.empresa_id, equiv_undprim;
        """),
        migrations.RunSQL("DROP VIEW IF EXISTS almacen_movimientosalida;"),
        migrations.RunSQL("""
            CREATE OR REPLACE VIEW almacen_movimientosalida AS
            SELECT row_number() OVER () as id,
                ak.producto_id,
                SUM(ak.cantidad) AS cantidad,
                ak.unidad_id,
                prod.unidad_equivalencia as equiv_undprim,
                ak.almacen_id,
                ak.empresa_id
            FROM almacen_kardex ak
            INNER JOIN producto_producto prod on ak.producto_id = prod.producto_id
            INNER JOIN almacen_tipomovimiento mov on ak.movimiento_id = mov.tipo_movimiento_id
            WHERE mov.codigo IN ('SAL_FACT', 'SAL_OBSQ', 'SAL_TRANS', 'SAL_NE', 'SAL_AJFAL')
            GROUP BY ak.producto_id, ak.unidad_id, ak.almacen_id, ak.empresa_id, equiv_undprim;
        """),
        migrations.RunSQL("DROP VIEW IF EXISTS almacen_movimientosaldo;"),
        migrations.RunSQL("""
            CREATE OR REPLACE VIEW almacen_movimientosaldo AS
            SELECT row_number() OVER () as id,
                prod.producto_id,
                COALESCE(inv_entrada.cantidad, 0)
                - COALESCE(inv_salida.cantidad,0) AS cantidad,
                prod.unidad_principal_id
            FROM producto_producto prod
            LEFT JOIN almacen_movimientoentrada inv_entrada ON inv_entrada.producto_id = prod.producto_id
            LEFT JOIN almacen_movimientosalida inv_salida ON inv_salida.producto_id = prod.producto_id;
        """),
        migrations.RunSQL("DROP VIEW IF EXISTS almacen_movimientoresumen;"),
        migrations.RunSQL("""
            create or replace view almacen_movimientoresumen as
            select 'entrada' as movimiento, ame.producto_id, ame.cantidad, ame.unidad_id, ame.almacen_id, ame.empresa_id
            from almacen_movimientoentrada ame
            union
            select 'salida' as movimiento, ams.producto_id, ams.cantidad, ams.unidad_id, ams.almacen_id, ams.empresa_id
            from almacen_movimientosalida ams;
        """),
        migrations.RunSQL("DROP VIEW IF EXISTS almacen_inventarioresumen;"),
        migrations.RunSQL("""
            create or replace view almacen_inventarioresumen as
            select row_number() over () as id,
            amr.producto_id,
            sum(case when amr.movimiento = 'entrada' then amr.cantidad else amr.cantidad * -1 end) as existencia
            from almacen_movimientoresumen amr
            group by amr.producto_id;
        """),
    ]
